library(tidyverse) # general
library(ggalt) # dumbbell plots
library(countrycode) # continent
library(gridExtra) # plots
theme_set(theme_light())
# 1) IMPORT & DATA CLEANING
data <- read_csv("/Users/eileen/Desktop/FIT5147_29286875(VizAssignment)/R/master.csv")
data <- data %>%
select(-c('HDI for year', 'suicides/100k pop')) %>%
rename(gdp_for_year = 'gdp_for_year ($)',
gdp_per_capita = 'gdp_per_capita ($)',
country_year = 'country-year') %>%
as.data.frame()
# a) this SHOULD give 12 rows for every county-year combination (6 age bands * 2 genders):
data %>%
group_by(country_year) %>%
count() %>%
filter(n != 12)
data <- data %>%
filter(year != 2016) %>% # I therefore exclude 2016 data
select(-country_year)
# b) excluding countries with <= 3 years of data:
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
library(tidyverse) # general
library(ggalt) # dumbbell plots
library(countrycode) # continent
library(gridExtra) # plots
theme_set(theme_light())
# 1) IMPORT & DATA CLEANING
data <- read_csv("/Users/eileen/Desktop/FIT5147_29286875(VizAssignment)/R/master.csv")
# 1) IMPORT & DATA CLEANING
data <- read_csv("/Users/eileen/Desktop/u/5147DataVisualization/Assignments/Final Project/FIT5147_29286875(VizAssignment)/R/master.csv")
data <- data %>%
select(-c('HDI for year', 'suicides/100k pop')) %>%
rename(gdp_for_year = 'gdp_for_year ($)',
gdp_per_capita = 'gdp_per_capita ($)',
country_year = 'country-year') %>%
as.data.frame()
# a) this SHOULD give 12 rows for every county-year combination (6 age bands * 2 genders):
data %>%
group_by(country_year) %>%
count() %>%
filter(n != 12)
data <- data %>%
filter(year != 2016) %>% # I therefore exclude 2016 data
select(-country_year)
# b) excluding countries with <= 3 years of data:
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
# 3) TIDYING DATAFRAME
data$age <- gsub(pattern = " years", replacement = "", data$age) # remove " years"
data$sex <- ifelse(data$sex == "male", "Male", "Female") # change to lowercase
# getting continent data:
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# Nominal factors
data_nominal <- c('country', 'sex', 'continent')
data[data_nominal] <- lapply(data[data_nominal], function(x){factor(x)})
# Making age ordinal
data$age <- factor(data$age,
ordered = T,
levels = c("5-14",
"15-24",
"25-34",
"35-54",
"55-74",
"75+"))
# Making generation ordinal
data$generation <- factor(data$generation,
ordered = T,
levels = c("G.I. Generation",
"Silent",
"Boomers",
"Generation X",
"Millenials",
"Generation Z"))
# as_tibble is a new S3 generic with more efficient methods for matrices and data frames
data <- as_tibble(data)
# the global rate over the time period will be useful:
global_average <- (sum(as.numeric(data$suicides_no)) / sum(as.numeric(data$population))) * 100000
# view the finalized data
glimpse(data)
global_average_data <- data %>%
group_by(year) %>%
summarize(population = sum(population),
suicides = sum(suicides_no),
suicides_per_100k = (suicides / population) * 100000)
# draw a plot of global suicides (per 100k)
data %>%
group_by(year) %>%
summarize(population = sum(population),
suicides = sum(suicides_no),
suicides_per_100k = (suicides / population) * 100000) %>%
ggplot(aes(x = year, y = suicides_per_100k)) +
geom_line(col = "deepskyblue3", size = 1) +
geom_point(col = "deepskyblue3", size = 2) +
geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 1) +
labs(title = "Global Suicides (per 100k)",
subtitle = "Trend over time, 1985 - 2015.",
x = "Year",
y = "Suicides per 100k") +
scale_x_continuous(breaks = seq(1985, 2015, 2)) +
scale_y_continuous(breaks = seq(10, 20))
###############
###############
## 2.2 By Continent ##
continent <- data %>%
group_by(continent) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
arrange(suicide_per_100k)
continent$continent <- factor(continent$continent, ordered = T, levels = continent$continent)
continent_plot <- ggplot(continent, aes(x = continent, y = suicide_per_100k, fill = continent)) +
geom_bar(stat = "identity") +
labs(title = "Global Suicides (per 100k), by Continent",
x = "Continent",
y = "Suicides per 100k",
fill = "Continent") +
theme(legend.position = "none", title = element_text(size = 10)) +
scale_y_continuous(breaks = seq(0, 20, 1), minor_breaks = F)
continent_time <- data %>%
group_by(year, continent) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000)
continent_time$continent <- factor(continent_time$continent, ordered = T, levels = continent$continent)
continent_time_plot <- ggplot(continent_time, aes(x = year, y = suicide_per_100k, col = factor(continent))) +
facet_grid(continent ~ ., scales = "free_y") +
geom_line() +
geom_point() +
labs(title = "Trends Over Time, by Continent",
x = "Year",
y = "Suicides per 100k",
color = "Continent") +
theme(legend.position = "none", title = element_text(size = 10)) +
scale_x_continuous(breaks = seq(1985, 2015, 5), minor_breaks = F)
# draw a plot global suicides (per 100k) by Continent
grid.arrange(continent_plot, continent_time_plot, ncol = 2)
###############
###############
## 2.3 By Sex ##
sex_plot <- data %>%
group_by(sex) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
ggplot(aes(x = sex, y = suicide_per_100k, fill = sex)) +
geom_bar(stat = "identity") +
labs(title = "Global suicides (per 100k), by Sex",
x = "Sex",
y = "Suicides per 100k") +
theme(legend.position = "none") +
scale_y_continuous(breaks = seq(0, 25), minor_breaks = F)
### with time
sex_time_plot <- data %>%
group_by(year, sex) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
ggplot(aes(x = year, y = suicide_per_100k, col = factor(sex))) +
facet_grid(sex ~ ., scales = "free_y") +
geom_line() +
geom_point() +
labs(title = "Trends Over Time, by Sex",
x = "Year",
y = "Suicides per 100k",
color = "Sex") +
theme(legend.position = "none") +
scale_x_continuous(breaks = seq(1985, 2015, 5), minor_breaks = F)
# draw a plot global suicides (per 100k) by Sex
grid.arrange(sex_plot, sex_time_plot, ncol = 2)
sex_time <- data %>%
group_by(year, sex) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000)
###############
###############
## 2.4 By Age ##
age_plot <- data %>%
group_by(age) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
ggplot(aes(x = age, y = suicide_per_100k, fill = age)) +
geom_bar(stat = "identity") +
labs(title = "Global suicides per 100k, by Age",
x = "Age",
y = "Suicides per 100k") +
theme(legend.position = "none") +
scale_y_continuous(breaks = seq(0, 30, 1), minor_breaks = F)
### with time
age_time_plot <- data %>%
group_by(year, age) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
ggplot(aes(x = year, y = suicide_per_100k, col = age)) +
facet_grid(age ~ ., scales = "free_y") +
geom_line() +
geom_point() +
labs(title = "Trends Over Time, by Age",
x = "Year",
y = "Suicides per 100k",
color = "Age") +
theme(legend.position = "none") +
scale_x_continuous(breaks = seq(1985, 2015, 5), minor_breaks = F)
# draw a plot global suicides (per 100k) by Age group
grid.arrange(age_plot, age_time_plot, ncol = 2)
age_time <- data %>%
group_by(year, age) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000)
#################################
# there are all analyzing below #
#################################
## 2.5 By Country ##
# 2.5.1 Overall
country <- data %>%
group_by(country, continent) %>%
summarize(n = n(),
suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
arrange(desc(suicide_per_100k))
country$country <- factor(country$country,
ordered = T,
levels = rev(country$country))
# draw a plot global suicides (per 100k) by Country
ggplot(country, aes(x = country, y = suicide_per_100k, fill = continent)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 1) +
labs(title = "Global suicides per 100k, by Country",
x = "Country",
y = "Suicides per 100k",
fill = "Continent") +
coord_flip() +
scale_y_continuous(breaks = seq(0, 45, 2)) +
theme(legend.position = "bottom")
# 2.5.2 Linear Trends
country_year <- data %>%
group_by(country, year) %>%
summarize(suicides = sum(suicides_no),
population = sum(population),
suicide_per_100k = (suicides / population) * 100000,
gdp_per_capita = mean(gdp_per_capita))
country_year_trends <- country_year %>%
ungroup() %>%
nest(-country) %>% # format: country, rest of data (in list column)
mutate(model = map(data, ~ lm(suicide_per_100k ~ year, data = .)), # for each item in 'data', fit a linear model
tidied = map(model, tidy)) %>% # tidy each of these into dataframe format - call this list 'tidied'
unnest(tidied)
country_year_sig_trends <- country_year_trends %>%
filter(term == "year") %>%
mutate(p.adjusted = p.adjust(p.value, method = "holm")) %>%
filter(p.adjusted < .05) %>%
arrange(estimate)
country_year_sig_trends$country <- factor(country_year_sig_trends$country,
ordered = T,
levels = country_year_sig_trends$country)
# draw a plot - Change per year
ggplot(country_year_sig_trends, aes(x=country, y=estimate, col = estimate)) +
geom_point(stat='identity', size = 4) +
geom_hline(yintercept = 0, col = "grey", size = 1) +
scale_color_gradient(low = "green", high = "red") +
geom_segment(aes(y = 0,
x = country,
yend = estimate,
xend = country), size = 1) +
labs(title="Change per year (Suicides per 100k)",
subtitle="Of countries with significant trends (p < 0.05)",
x = "Country", y = "Change Per Year (Suicides per 100k)") +
scale_y_continuous(breaks = seq(-2, 2, 0.2), limits = c(-1.5, 1.5)) +
theme(legend.position = "none") +
coord_flip()
top12_increasing <- tail(country_year_sig_trends$country, 12)
country_year %>%
filter(country %in% top12_increasing) %>%
ggplot(aes(x = year, y = suicide_per_100k, col = country)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ country) +
theme(legend.position = "none") +
labs(title="12 Steepest Increasing Trends",
subtitle="Of countries with significant trends (p < 0.05)",
x = "Year",
y = "Suicides per 100k")
top12_decreasing <- head(country_year_sig_trends$country, 12)
country_year_trends <- country_year %>%
ungroup() %>%
nest(-country) %>% # format: country, rest of data (in list column)
mutate(model = map(data, ~ lm(suicide_per_100k ~ year, data = .)), # for each item in 'data', fit a linear model
tidied = map(model, tidy)) %>% # tidy each of these into dataframe format - call this list 'tidied'
unnest(tidied)
library(broom) # significant trends within countries
country_year_trends <- country_year %>%
ungroup() %>%
nest(-country) %>% # format: country, rest of data (in list column)
mutate(model = map(data, ~ lm(suicide_per_100k ~ year, data = .)), # for each item in 'data', fit a linear model
tidied = map(model, tidy)) %>% # tidy each of these into dataframe format - call this list 'tidied'
unnest(tidied)
country_year_sig_trends <- country_year_trends %>%
filter(term == "year") %>%
mutate(p.adjusted = p.adjust(p.value, method = "holm")) %>%
filter(p.adjusted < .05) %>%
arrange(estimate)
country_year_sig_trends$country <- factor(country_year_sig_trends$country,
ordered = T,
levels = country_year_sig_trends$country)
# draw a plot - Change per year
ggplot(country_year_sig_trends, aes(x=country, y=estimate, col = estimate)) +
geom_point(stat='identity', size = 4) +
geom_hline(yintercept = 0, col = "grey", size = 1) +
scale_color_gradient(low = "green", high = "red") +
geom_segment(aes(y = 0,
x = country,
yend = estimate,
xend = country), size = 1) +
labs(title="Change per year (Suicides per 100k)",
subtitle="Of countries with significant trends (p < 0.05)",
x = "Country", y = "Change Per Year (Suicides per 100k)") +
scale_y_continuous(breaks = seq(-2, 2, 0.2), limits = c(-1.5, 1.5)) +
theme(legend.position = "none") +
coord_flip()
top12_increasing <- tail(country_year_sig_trends$country, 12)
country_year %>%
filter(country %in% top12_increasing) %>%
ggplot(aes(x = year, y = suicide_per_100k, col = country)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ country) +
theme(legend.position = "none") +
labs(title="12 Steepest Increasing Trends",
subtitle="Of countries with significant trends (p < 0.05)",
x = "Year",
y = "Suicides per 100k")
top12_decreasing <- head(country_year_sig_trends$country, 12)
country_year %>%
filter(country %in% top12_decreasing) %>%
ggplot(aes(x = year, y = suicide_per_100k, col = country)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ country) +
theme(legend.position = "none") +
labs(title="12 Steepest Decreasing Trends",
subtitle="Of countries with significant trends (p < 0.05)",
x = "Year",
y = "Suicides per 100k")
###############
###############
## 2.6 Gender differences, by Continent ##
data %>%
group_by(continent, sex) %>%
summarize(n = n(),
suicides = sum(as.numeric(suicides_no)),
population = sum(as.numeric(population)),
suicide_per_100k = (suicides / population) * 100000) %>%
ggplot(aes(x = continent, y = suicide_per_100k, fill = sex)) +
geom_bar(stat = "identity", position = "dodge") +
geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 1) +
labs(title = "Gender Disparity, by Continent",
x = "Continent",
y = "Suicides per 100k",
fill = "Sex") +
coord_flip()
###############
###############
## 2.7 Gender differences, by Country ##
country_long <- data %>%
group_by(country, continent) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
mutate(sex = "OVERALL")
sex_country_long <- data %>%
group_by(country, continent, sex) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000)
sex_country_wide <- sex_country_long %>%
spread(sex, suicide_per_100k) %>%
arrange(Male - Female)
sex_country_wide$country <- factor(sex_country_wide$country,
ordered = T,
levels = sex_country_wide$country)
sex_country_long$country <- factor(sex_country_long$country,
ordered = T,
levels = sex_country_wide$country) # using the same order
ggplot(sex_country_wide, aes(y = country, color = sex)) +
geom_dumbbell(aes(x=Female, xend=Male), color = "grey", size = 1) +
geom_point(data = sex_country_long, aes(x = suicide_per_100k), size = 3) +
geom_point(data = country_long, aes(x = suicide_per_100k)) +
geom_vline(xintercept = global_average, linetype = 2, color = "grey35", size = 1) +
theme(axis.text.y = element_text(size = 8),
legend.position = c(0.85, 0.2)) +
scale_x_continuous(breaks = seq(0, 80, 10)) +
labs(title = "Gender Disparity, by Continent & Country",
subtitle = "Ordered by difference in deaths per 100k.",
x = "Suicides per 100k",
y = "Country",
color = "Sex")
country_gender_prop <- sex_country_wide %>%
mutate(Male_Proportion = Male / (Female + Male)) %>%
arrange(Male_Proportion)
sex_country_long$country <- factor(sex_country_long$country,
ordered = T,
levels = country_gender_prop$country)
ggplot(sex_country_long, aes(y = suicide_per_100k, x = country, fill = sex)) +
geom_bar(position = "fill", stat = "identity") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Proportions of suicides that are Male & Female, by Country",
x = "Country",
y = "Suicides per 100k",
fill = "Sex") +
coord_flip()
###############
###############
## 2.8 Age differences, by Continent ##
data %>%
group_by(continent, age) %>%
summarize(n = n(),
suicides = sum(as.numeric(suicides_no)),
population = sum(as.numeric(population)),
suicide_per_100k = (suicides / population) * 100000) %>%
ggplot(aes(x = continent, y = suicide_per_100k, fill = age)) +
geom_bar(stat = "identity", position = "dodge") +
geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 1) +
labs(title = "Age Disparity, by Continent",
x = "Continent",
y = "Suicides per 100k",
fill = "Age")
